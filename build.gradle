buildscript {
   ext.kotlin_version = '0.1-SNAPSHOT'
   repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

if (hasProperty("teamcity") && kotlin_version != '0.1-SNAPSHOT') {
    version = teamcity["build.number"]
} else
    version = "0.1-SNAPSHOT"

apply plugin: 'kotlin'

repositories {
    mavenCentral()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
}

compileKotlin {
    kotlinOptions.annotations = file('annotations/Gradle_io.netty_netty-all_4.0.17.Final')
}


dependencies {
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.12",
            "io.netty:netty-all:4.0.17.Final",
            "commons-codec:commons-codec:1.6",
            "commons-logging:commons-logging:1.1.1",
            "org.apache.httpcomponents:httpclient:4.2.3",
            "org.apache.httpcomponents:httpcore:4.2.3",
            "com.netflix.rxjava:rxjava-core:0.20.0-RC4",
            "org.codehaus.woodstox:woodstox-core-asl:4.1.4",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.1.3",
            "org.slf4j:slf4j-api:1.7.5",
            "org.slf4j:slf4j-simple:1.7.5",
            "joda-time:joda-time:2.3",
            "redis.clients:jedis:2.4.2"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "junit:junit:4.9",
         "org.mockito:mockito-all:1.9.5"
}


test {

    // set heap size for the test JVM(s)
    minHeapSize = "128m"
    maxHeapSize = "512m"

    // set JVM arguments for the test JVM(s)
    jvmArgs '-XX:MaxPermSize=256m'
}

sourceSets {
    main {
        kotlin {
            srcDir "src/main/kotlin"
        }
    }

    test {
        kotlin {
            srcDir "test/main/kotlin"
        }
    }
}
apply plugin: 'maven'
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "org.wasabi"
            artifactId = "wasabi"
            version = "${version}"

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }


    repositories {
        maven {
            url "http://repository.jetbrains.com/wasabi"
            if (rootProject.hasProperty("deploy_username") && rootProject.hasProperty("deploy_password")) {
                credentials {
                    username "${rootProject.deploy_username}"
                    password "${rootProject.deploy_password}"
                }
            }
        }
    }


}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'

    doLast() {
        def gradleOpts = "-XX:MaxPermSize=300m -Xmx1024m"
        def gradlew_sh = file("gradlew")
        def gradlew_bat = file("gradlew.bat")
        gradlew_sh.text = gradlew_sh.text.replace("DEFAULT_JVM_OPTS=",
                "GRADLE_OPTS=\"$gradleOpts \$GRADLE_OPTS\"\nDEFAULT_JVM_OPTS=")
        gradlew_bat.text = gradlew_bat.text.replace("set DEFAULT_JVM_OPTS=",
                "set GRADLE_OPTS=$gradleOpts %GRADLE_OPTS%\nset DEFAULT_JVM_OPTS=")

    }
}
